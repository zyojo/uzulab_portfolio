import { gsap } from 'gsap'
import { ScrollTrigger } from 'gsap/dist/ScrollTrigger'
import Head from 'next/head'
import { ReactElement, useRef, useState } from 'react'
import styles from './Base.module.scss'
import { Footer } from '@/components/common/Footer/Footer'
import { Header } from '@/components/common/Header/Header'
import useResizeObserver from '@/hooks/useResizeObserver'

type LayoutProps = Required<{
  readonly children: ReactElement
}>

export const BaseLayout = ({ children }: LayoutProps) => {
  const containerRef = useRef<HTMLDivElement>(null)
  const [containerHeight, setContainerHeight] = useState(containerRef.current?.clientHeight)
  gsap.registerPlugin(ScrollTrigger)

  useResizeObserver([containerRef], () => {
    console.log('resize')
    ScrollTrigger.killAll()
    gsap.to(containerRef.current, {
      y: 0,
    })
    setContainerHeight(containerRef.current?.clientHeight)
    if (typeof window === 'object' && containerHeight !== undefined) {
      document.body.style.height = `${containerHeight}px`
      gsap.to(containerRef.current, {
        y: -(containerHeight - document.documentElement.clientHeight),
        ease: 'none',
        scrollTrigger: {
          trigger: document.body,
          markers: true,
          start: 'top top',
          end: 'bottom bottom',
          scrub: 1,
        },
      })
    }
  })

  if (typeof window === 'object' && containerHeight !== undefined) {
    document.body.style.height = `${containerHeight}px`
    gsap.to(containerRef.current, {
      y: -(containerHeight - document.documentElement.clientHeight),
      ease: 'none',
      scrollTrigger: {
        trigger: document.body,
        markers: true,
        start: 'top top',
        end: 'bottom bottom',
        scrub: 1,
      },
    })
  }

  return (
    <>
      <Head>
        <title>uzulab</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <main className={styles.base}>
        <Header />
        <div className={styles.base_container} ref={containerRef}>
          {children}
          <Footer />
        </div>
      </main>
    </>
  )
}
